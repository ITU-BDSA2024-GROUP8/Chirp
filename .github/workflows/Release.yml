name: Build, Test, and Release Chirp Executable

on:
  push:
    branches:
      - main # Trigger on pushes to main
    tags:
      - 'v*.*.*' # Trigger on tag pushes
  pull_request:
    branches:
      - main # Trigger on pull requests to main

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    name: Build, Test, and Release Chirp Executable

    env:
      authentication_github_clientId: ${{ secrets.AUTHENTICATION_GITHUB_CLIENTID }}
      authentication_github_clientSecret: ${{ secrets.AUTHENTICATION_GITHUB_CLIENTSECRET }}
    
    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history and tags
      
      # Auto-increment version and push tag (only on main branch push)
      - name: Bump Version and Tag
        if: github.ref == 'refs/heads/main'
        id: version
        run: |
          # Fetch the latest version tag
          latest_tag=$(git describe --tags --abbrev=0 || echo "v0.0.0")
          echo "Latest tag: $latest_tag"

          # Parse the version (vX.Y.Z)
          major=$(echo $latest_tag | cut -d'.' -f1 | cut -c2-)
          minor=$(echo $latest_tag | cut -d'.' -f2)
          patch=$(echo $latest_tag | cut -d'.' -f3)

          # Increment the patch version
          patch=$((patch + 1))
          new_tag="v${major}.${minor}.${patch}"
          echo "New tag: $new_tag"

          # Create a new tag and push it
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git tag $new_tag
          git push origin $new_tag

          # Export the new tag
          echo "tag=$new_tag" >> $GITHUB_ENV

      # Setup .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'
      
      # Restore dependencies
      - name: Restore dependencies
        run: dotnet restore
        
      # Build the solution
      - name: Build the solution
        run: dotnet build Chirp.sln --configuration Release --no-restore

      - name: Build & Install
        run: dotnet build
      
      - name: Install Playwright CLI
        run: dotnet tool install --global Microsoft.Playwright.CLI

      - name: Install Playwright browsers
        run: playwright install

      # Run tests
      - name: Run tests
        run: dotnet test --configuration Release --verbosity normal
      
      # Publish executables (only for tagged pushes)
      - name: Publish Chirp Web Executable
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          dotnet publish src/Chirp.Web/Chirp.Web.csproj \
            --configuration Release \
            --self-contained true \
            --output ./publish/linux-x64 \
            -r linux-x64 \
            /p:PublishSingleFile=true
          
          dotnet publish src/Chirp.Web/Chirp.Web.csproj \
            --configuration Release \
            --self-contained true \
